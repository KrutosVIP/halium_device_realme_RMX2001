# This is a basic workflow to help you get started with Actions

name: Ubuntu Touch build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the halium10 branch
  push:
    branches: [ halium11 ]
  pull_request:
    branches: [ halium11 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Update runner
        run: |
            sudo apt update && apt install android-tools-mkbootimg bc bison build-essential ca-certificates cpio curl flex git kmod libssl-dev libtinfo5 python2 sudo unzip wget xz-utils -y --no-install-recommends
            ln -sf python2.7 /usr/bin/python

      - name: Install mkbootimg
        run: |
            sudo wget https://raw.githubusercontent.com/LineageOS/android_system_core/lineage-17.1/mkbootimg/mkbootimg.py -O /usr/bin/mkbootimg
            cd ~

      - name: Clone Repositories
        run: | 
            git clone https://github.com/KrutosVIP/halium_device_realme_RMX2001
            
          
      - name: Start build
        run: ./build/build.sh
        
      - name: Pre-OTA:
        run: |
            apt install -y git img2simg jq sudo wget xz-utils
            DEVICE="$(source deviceinfo && echo $deviceinfo_codename)"
            
      - name: Prepare OTA
        run: ./build/prepare-fake-ota.sh out/device_$DEVICE.tar.xz ota && mkdir -p out && ./build/system-image-from-ota.sh ota/ubuntu_command out
        
      - run: echo Build Complete!
      - uses: actions/upload-artifact@v2
        with:
           name: boot.img
           path: out/boot.img
      - run: echo Upload system.img...
      - uses: actions/upload-artifact@v2
        with:
           name: system.img
           path: out/system.img
